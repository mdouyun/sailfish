package org.thorn.sailfish.service;

import org.thorn.sailfish.entity.${nameFirLetterUc};
import org.thorn.sailfish.dao.${nameFirLetterUc}Dao;
import org.thorn.sailfish.core.Configuration;
import org.thorn.sailfish.core.Page;

import java.util.HashMap;
import java.util.List;
import java.util.Arrays;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
/**
 * @Author: yfchenyun
 * @Since: ${.now}
 * @Version: 1.0
 */
@Service
public class ${nameFirLetterUc}Service {

    @Autowired
    private ${nameFirLetterUc}Dao ${name}Dao;

    public void save(${nameFirLetterUc} ${name}) {
        ${name}Dao.save(${name});
    }

    public void modify(${nameFirLetterUc} ${name}) {
        ${name}Dao.modify(${name});
    }

    public void delete(String ids) {
        String[] array = StringUtils.split(ids, ',');
        if(array == null || array.length == 0) {
            return ;
        }

        List<String> list = Arrays.asList(array);
        ${name}Dao.delete(list);
    }

    public Page<${nameFirLetterUc}> queryPage(long start, long limit, String sort, String dir) {
        Map<String, Object> filter = new HashMap<String, Object>();

		filter.put(Configuration.PAGE_LIMIT, limit);
		filter.put(Configuration.PAGE_START, start);
		filter.put(Configuration.SORT_NAME, sort);
		filter.put(Configuration.ORDER_NAME, dir);

		Page<${nameFirLetterUc}> page = new Page<${nameFirLetterUc}>();

		page.setTotal(${name}Dao.count(filter));
		if(page.getTotal() > 0) {
			page.setResultSet(${name}Dao.query(filter));
		}

		return page;
    }

}